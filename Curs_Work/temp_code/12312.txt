import QtQuick 2.15
import QtQuick.Controls 2.15
import QtQuick.Layouts 1.15

RowLayout {
    // Use RowLayout to place buttons side by side
    anchors {
        horizontalCenter: parent.horizontalCenter
        bottom: parent.bottom
        bottomMargin: 20
    }
    spacing: 10 // Optional spacing between buttons

    Rectangle {
        id: generateButton
        color: "lightgreen" // Example color
        width: 100
        height: 50
        radius: 5

        Text {
            text: "Generate"
            anchors.centerIn: parent
            color: "black"
        }

        MouseArea {
            anchors.fill: parent
            onClicked: {
                // Assuming you have a C++ backend with a mazeGenerator object
                // and a generateMaze method. Adjust as needed.
                //mazeGenerator.generateMaze(20, 20) // Example call
            }
        }
    }

    Rectangle {
        id: exitButton
        color: "red"
        width: 100
        height: 50
        radius: 5

        Text {
            text: "Exit"
            anchors.centerIn: parent
            color: "white"
        }

        MouseArea {
            anchors.fill: parent
            onClicked: {
                Qt.quit() // This will close the application. Adjust as necessary.
            }
        }
    }

    Rectangle {
        id: infoButton
        color: "blue"
        width: 100
        height: 50
        radius: 5

        Text {
            text: "Информация"
            anchors.centerIn: parent
            color: "white"
        }

        MouseArea {
            anchors.fill: parent
            onClicked: {
                var infoText = "Эта программа генерирует лабиринты.\n" +
                              "Нажмите на кнопку 'Generate', чтобы сгенерировать новый лабиринт.\n" +
                              "Нажмите на кнопку 'Exit', чтобы выйти из программы.";
                dialog.open();
            }
        }
    }
}

Dialog {
    id: dialog
    title: "Информация"
    standardButtons: Dialog.Ok
    width: 400
    height: 200

    TextArea {
        id: textArea
        anchors.fill: parent
        readOnly: true
    }

    onOpened: {
        var infoText = "Эта программа генерирует лабиринты.\n" +
                      "Нажмите на кнопку 'Generate', чтобы сгенерировать новый лабиринт.\n" +
                      "Нажмите на кнопку 'Exit', чтобы выйти из программы.";
        textArea.text = infoText;
    }
}